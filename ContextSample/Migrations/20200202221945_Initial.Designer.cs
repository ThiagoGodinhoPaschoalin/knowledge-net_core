// <auto-generated />
using System;
using ContextSample.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContextSample.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    [Migration("20200202221945_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContextSample.Models.SampleProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("Code")
                        .HasColumnType("NVARCHAR(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("DATE");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("NVARCHAR(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Image")
                        .HasColumnName("Image")
                        .HasColumnType("NVARCHAR(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("NVARCHAR(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Price")
                        .HasColumnName("Price")
                        .HasColumnType("DECIMAL(19,4)");

                    b.Property<Guid>("StarRatingId")
                        .HasColumnName("StarRatingId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.HasKey("Id");

                    b.HasIndex("StarRatingId");

                    b.ToTable("Products","dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1fc2d4c-24b1-48e8-bb2b-ecc305038420"),
                            Code = "GDN-0011",
                            CreatedDate = new DateTime(2019, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Leaf rake with 48-inch wooden handle.",
                            Image = "assets/images/leaf_rake.png",
                            Name = "Leaf Rake",
                            Price = 19.95m,
                            StarRatingId = new Guid("d37185b9-b403-47e5-8f83-e5b0523d5276")
                        },
                        new
                        {
                            Id = new Guid("70e66e29-9ba7-494d-b219-d2e47e32cc55"),
                            Code = "GDN-0023",
                            CreatedDate = new DateTime(2019, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "15 gallon capacity rolling garden cart",
                            Image = "assets/images/garden_cart.png",
                            Name = "Garden Cart",
                            Price = 32.99m,
                            StarRatingId = new Guid("ebff7837-b8e3-4112-9a6b-3b0e6e6257ad")
                        },
                        new
                        {
                            Id = new Guid("7a89fc1f-9b4a-430b-ad52-2aab847fab58"),
                            Code = "TBX-0048",
                            CreatedDate = new DateTime(2019, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Curved claw steel hammer",
                            Image = "assets/images/hammer.png",
                            Name = "Hammer",
                            Price = 8.9m,
                            StarRatingId = new Guid("99394cf3-40fe-4ec7-9ece-55dbbd32db55")
                        },
                        new
                        {
                            Id = new Guid("cf9ae9f4-8de0-4d07-8e67-c53c23a8b29d"),
                            Code = "TBX-0022",
                            CreatedDate = new DateTime(2019, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "15-inch steel blade hand saw",
                            Image = "assets/images/saw.png",
                            Name = "Saw",
                            Price = 11.55m,
                            StarRatingId = new Guid("e0eb5e32-2fe4-4183-a0d3-dd79945c266a")
                        },
                        new
                        {
                            Id = new Guid("eeefd27a-3f6b-45f6-8df7-83de8647e53e"),
                            Code = "GMG-0042",
                            CreatedDate = new DateTime(2019, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Standard two-button video game controller",
                            Image = "assets/images/xbox-controller.png",
                            Name = "Video Game Controller",
                            Price = 35.95m,
                            StarRatingId = new Guid("8f72bd3c-feda-47e5-9c3d-e6d2fa9b8f20")
                        });
                });

            modelBuilder.Entity("ContextSample.Models.SampleStarRatingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("NVARCHAR(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Image")
                        .HasColumnName("Image")
                        .HasColumnType("NVARCHAR(500)")
                        .HasMaxLength(500);

                    b.Property<float>("Star")
                        .HasColumnName("Star")
                        .HasColumnType("FLOAT(24)");

                    b.HasKey("Id");

                    b.HasIndex("Star")
                        .IsUnique()
                        .HasName("UK_StarRating_Star");

                    b.ToTable("StarRating","dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d37185b9-b403-47e5-8f83-e5b0523d5276"),
                            Star = 0.1f
                        },
                        new
                        {
                            Id = new Guid("ebff7837-b8e3-4112-9a6b-3b0e6e6257ad"),
                            Star = 0.2f
                        },
                        new
                        {
                            Id = new Guid("99394cf3-40fe-4ec7-9ece-55dbbd32db55"),
                            Star = 0.3f
                        },
                        new
                        {
                            Id = new Guid("e0eb5e32-2fe4-4183-a0d3-dd79945c266a"),
                            Star = 0.4f
                        },
                        new
                        {
                            Id = new Guid("8f72bd3c-feda-47e5-9c3d-e6d2fa9b8f20"),
                            Star = 0.5f
                        });
                });

            modelBuilder.Entity("ContextSample.Models.SampleProductModel", b =>
                {
                    b.HasOne("ContextSample.Models.SampleStarRatingModel", "StarRating")
                        .WithMany("Products")
                        .HasForeignKey("StarRatingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
